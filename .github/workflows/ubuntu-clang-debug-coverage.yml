name: ubuntu-clang-debug-w-coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CC: clang-18
  CXX: clang++-18
  CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS: clang-scan-deps-18

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt-get update
          sudo apt install -y cmake ninja-build

      - name: Install Ninja
        run: |
          wget https://github.com/ninja-build/ninja/releases/latest/download/ninja-linux.zip
          sudo unzip ninja-linux.zip -d /usr/local/bin/
          sudo update-alternatives --install /usr/bin/ninja ninja /usr/local/bin/ninja 1 --force

      - name: Install Clang
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18
          sudo apt install clang-tools-18 libc++-18-dev libc++abi-18-dev

      - name: Check versions
        run: |
          echo "======================================================="
          echo "================ CMAKE version ========================"
          cmake --version
          echo "================ Ninja version ========================"
          ninja --version
          echo "================ GCC version =========================="
          gcc --version
          echo "================ G++ version =========================="
          g++ --version
          echo "================ Clang version ========================"
          clang-18 --version
          echo "================ Clang++ version ======================"
          clang++-18 --version
          echo "================ Clang scan-deps version =============="
          clang-scan-deps-18 --version
          echo "======================================================="

      - name: Configure CMake
        run: cmake -S . -B ${{runner.workspace}}/build -DCMAKE_BUILD_TYPE=Debug -G Ninja -DDGE_COVERAGE_REPORT:BOOL=ON

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --config Debug

      - name: Test
        working-directory: ${{runner.workspace}}/build
        run: ctest --extra-verbose

      - name: Generate coverage
        working-directory: ${{runner.workspace}}/build
        run: |
          pipx install gcovr
          mkdir -p coverage/html
          mkdir -p coverage/xml
          mkdir -p coverage/txt
          mkdir -p coverage/json
          gcovr -r .. --gcov-executable "llvm-cov-18 gcov" --filter /engine/src --html --html-details --html-self-contained --html-theme github.dark-green -o ./coverage/html/coverage.html --cobertura ./coverage/xml/coverage.xml --txt ./coverage/txt/coverage.txt --json ./coverage/json/coverage.json

      - name: Upload results to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ${{runner.workspace}}/build/coverage/txt/coverage.txt
          name: codecov-dge
          fail_ci_if_error: true
          verbose: true
